name: deploy-docs
on:
  push:
    branches:
    - main
    paths:
    - '.github/workflows/deploy-docs.yaml'
    - 'website/**'
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches:
    - main
    paths:
    - '.github/workflows/deploy-docs.yaml'
    - 'website/**'
  workflow_dispatch:


permissions:
  contents: read

jobs:
  deploy:
    name: Generate docs website to GitHub Pages
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        working-directory: website
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Harden Runner
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          github.com:443 registry.yarnpkg.com:443 registry.npmjs.org:443 *.githubusercontent.com:443 *.blob.core.windows.net:443

    - name: Setup Node
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version: 20.x

    - name: Get yarn cache
      id: yarn-cache
      run: echo "dir=$(yarn cache dir)" > $GITHUB_OUTPUT

    - name: Cache dependencies
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-website-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-website-

    - run: yarn install --frozen-lockfile
    
    - name: Create or update docs version for release
      if: startsWith(github.ref, 'refs/tags/v') && github.event_name == 'push'
      run: |
        # Extract version from git tag (e.g., v0.5.0 -> 0.5)
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        MINOR_VERSION=$(echo $TAG_VERSION | cut -d. -f1-2)
        VERSION_NAME="v${MINOR_VERSION}.x"
        
        echo "Detected new tag: $TAG_VERSION"
        echo "Processing docs version: $VERSION_NAME"
        
        # Check if this version already exists
        if [ -d "versioned_docs/version-$VERSION_NAME" ]; then
          echo "Version $VERSION_NAME already exists, updating with latest docs"
          
          # Remove existing versioned docs to update them
          rm -rf "versioned_docs/version-$VERSION_NAME"
          rm -f "versioned_sidebars/version-$VERSION_NAME-sidebars.json"
          
          # Remove the version from versions.json temporarily
          if [ -f "versions.json" ]; then
            node -e "
              const fs = require('fs');
              const versions = JSON.parse(fs.readFileSync('versions.json', 'utf8'));
              const filtered = versions.filter(v => v !== '$VERSION_NAME');
              fs.writeFileSync('versions.json', JSON.stringify(filtered, null, 2));
            "
          fi
          
          # Create the version again with updated docs
          npm run docusaurus docs:version $VERSION_NAME
          echo "Updated existing version $VERSION_NAME with latest docs"
        else
          echo "Creating new docs version: $VERSION_NAME"
          npm run docusaurus docs:version $VERSION_NAME
          echo "Created new version $VERSION_NAME"
        fi
        
        # Configure git for committing
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add and commit the versioned docs
        git add versioned_docs/ versioned_sidebars/ versions.json
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "docs: update version $VERSION_NAME for release $TAG_VERSION"
          git push origin main
        fi
    
    - run: yarn build
      env:
        ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
        ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
        ALGOLIA_SITE_VERIFICATION: ${{ secrets.ALGOLIA_SITE_VERIFICATION }}

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4.0.0
      if: github.event_name != 'pull_request'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./website/build
        destination_dir: docs
