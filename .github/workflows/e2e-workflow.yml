name: kaito-e2e-workflow

on:
  workflow_call:
    inputs:
      git_sha:
        type: string
        required: true
      node_provisioner:
        type: string
        required: false
        default: gpuprovisioner
      tag:
        type: string
      isRelease:
        type: boolean
        default: false
      registry:
        type: string
      region:
        type: string
        description: "the azure location to run the e2e test in"
        default: "eastus"
      k8s_version:
        type: string
        default: "1.30.0"

jobs:
  base-setup:
    uses: ./.github/workflows/e2e-base-setup.yaml
    with:
      git_sha: ${{ inputs.git_sha }}
      node_provisioner: ${{ inputs.node_provisioner }}
      tag: ${{ inputs.tag }}
      isRelease: ${{ inputs.isRelease }}
      registry: ${{ inputs.registry }}
      region: ${{ inputs.region }}
      k8s_version: ${{ inputs.k8s_version }}

  e2e-tests:
    runs-on: [ "self-hosted", "hostname:kaito-e2e-github-runner" ]
    name: e2e-tests-${{ inputs.node_provisioner }}
    needs: base-setup
    permissions:
      contents: read
      id-token: write # This is required for requesting the JWT
    
    env:
      AZURE_CLUSTER_NAME: ${{ needs.base-setup.outputs.cluster_name }}
      RUN_LLAMA_13B: ${{ needs.base-setup.outputs.run_llama_13b }}
      TEST_SUITE: ${{ inputs.node_provisioner }}
      E2E_ACR_REGISTRY: ${{ needs.base-setup.outputs.cluster_name }}.azurecr.io
      E2E_ACR_REGISTRY_SECRET: ${{ needs.base-setup.outputs.cluster_name }}-acr-secret
      GO_VERSION: "1.23"
      KARPENTER_NAMESPACE: "karpenter"
      GPU_PROVISIONER_NAMESPACE: "gpu-provisioner"

    steps:
      - name: Set Registry
        if: ${{ inputs.isRelease }}
        run: |
          echo "REGISTRY=${{ inputs.registry }}" >> $GITHUB_ENV
          echo "VERSION=$(echo ${{ inputs.tag }} | tr -d v)" >> $GITHUB_ENV

      - name: build adapter image
        shell: bash
        run: |
          make docker-build-adapter
        env:
          REGISTRY: ${{ env.E2E_ACR_REGISTRY }}

      - name: build dataset image
        shell: bash
        run: |
          make docker-build-dataset
        env:
          REGISTRY: ${{ env.E2E_ACR_REGISTRY }}
      
      - name: Remove existing Go modules directory
        run: sudo rm -rf ~/go/pkg/mod
      
      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5.2.0
        with:
          go-version: ${{ env.GO_VERSION  }}

      - name: Log ${{ inputs.node_provisioner }}
        run: |
          if [ "${{ inputs.node_provisioner }}" == "gpuprovisioner" ]; then
            kubectl logs -n "${{ env.GPU_PROVISIONER_NAMESPACE }}" -l app.kubernetes.io/name=gpu-provisioner -c controller
          else
            kubectl logs -n "${{ env.KARPENTER_NAMESPACE }}" -l app.kubernetes.io/name=karpenter -c controller
          fi

      - name: Log kaito-workspace
        run: |
          kubectl get pods -n kaito-workspace -o name | grep "^pod/kaito-workspace" | sed 's/^pod\///' | xargs -I {} kubectl logs -n kaito-workspace {}

      - name: Run e2e test
        run: |
          AI_MODELS_REGISTRY=$E2E_ACR_AMRT_USERNAME.azurecr.io \
          AI_MODELS_REGISTRY_SECRET=$E2E_AMRT_SECRET_NAME \
          make kaito-workspace-e2e-test

      - name: Cleanup e2e resources
        if: ${{ always() }}
        uses: azure/CLI@v2.1.0
        with:
          inlineScript: |
            set +e
            az group delete --name "${AZURE_CLUSTER_NAME}" --yes --no-wait || true