name: kaito-e2e-workflow

on:
  workflow_call:
    inputs:
      git_sha:
        type: string
        required: true
      node_provisioner:
        type: string
        required: false
        default: gpuprovisioner
      tag:
        type: string
      isRelease:
        type: boolean
        default: false
      registry:
        type: string
      region:
        type: string
        description: "the azure location to run the e2e test in"
        default: "eastus"
      k8s_version:
        type: string
        default: "1.30.0"

jobs:
  e2e-tests:
    runs-on: [ "self-hosted", "hostname:kaito-e2e-github-runner" ]
    name: e2e-tests-${{ inputs.node_provisioner }}
    environment: e2e-test
    permissions:
      contents: read
      id-token: write # This is required for requesting the JWT
    
    env:
      TEST_SUITE: ${{ inputs.node_provisioner }}
      GO_VERSION: "1.24"
      KARPENTER_NAMESPACE: "karpenter"
      GPU_PROVISIONER_NAMESPACE: "gpu-provisioner"

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit
          disable-sudo: true
          disable-telemetry: true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.git_sha }}

      - name: Run e2e-base-setup composite action
        id: base-setup
        uses: ./.github/actions/e2e-base-setup
        with:
          git_sha: ${{ inputs.git_sha }}
          node_provisioner: ${{ inputs.node_provisioner }}
          tag: ${{ inputs.tag }}
          isRelease: ${{ inputs.isRelease }}
          region: ${{ inputs.region }}
          k8s_version: ${{ inputs.k8s_version }}
          registry: ${{ inputs.registry }}

      - name: Set Registry
        if: ${{ inputs.isRelease }}
        run: |
          echo "REGISTRY=${{ inputs.registry }}" >> $GITHUB_ENV
          echo "VERSION=$(echo ${{ inputs.tag }} | tr -d v)" >> $GITHUB_ENV

      - name: build adapter image
        shell: bash
        run: |
          make docker-build-adapter
        env:
          REGISTRY: ${{ env.CLUSTER_NAME }}.azurecr.io

      - name: build dataset image
        shell: bash
        run: |
          make docker-build-dataset
        env:
          REGISTRY: ${{ env.CLUSTER_NAME }}.azurecr.io
      
      - name: Remove existing Go modules directory
        run: sudo rm -rf ~/go/pkg/mod
      
      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5.4.0
        with:
          go-version: ${{ env.GO_VERSION  }}

      - name: Log ${{ inputs.node_provisioner }}
        run: |
          if [ "${{ inputs.node_provisioner }}" == "gpuprovisioner" ]; then
            kubectl logs -n "${{ env.GPU_PROVISIONER_NAMESPACE }}" -l app.kubernetes.io/name=gpu-provisioner -c controller
          else
            kubectl logs -n "${{ env.KARPENTER_NAMESPACE }}" -l app.kubernetes.io/name=karpenter -c controller
          fi

      - name: Log kaito-workspace
        run: |
          kubectl get pods -n kaito-workspace -o name | grep "^pod/kaito-workspace" | sed 's/^pod\///' | xargs -I {} kubectl logs -n kaito-workspace {}

      - name: Run full e2e test
        if: ${{ inputs.isRelease }}
        run: |
          AI_MODELS_REGISTRY=$E2E_ACR_AMRT_USERNAME.azurecr.io \
          AI_MODELS_REGISTRY_SECRET=$E2E_AMRT_SECRET_NAME \
          HF_TOKEN=$HF_TOKEN \
          make kaito-workspace-e2e-test
        env:
          AZURE_CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
          E2E_ACR_REGISTRY: ${{ env.CLUSTER_NAME }}.azurecr.io
          E2E_ACR_REGISTRY_SECRET: ${{ env.CLUSTER_NAME }}-acr-secret

      - name: Run fast e2e test
        if: ${{ !inputs.isRelease }}
        run: |
          AI_MODELS_REGISTRY=$E2E_ACR_AMRT_USERNAME.azurecr.io \
          AI_MODELS_REGISTRY_SECRET=$E2E_AMRT_SECRET_NAME \
          GINKGO_LABEL=FastCheck \
          HF_TOKEN=$HF_TOKEN \
          make kaito-workspace-e2e-test
        env:
          AZURE_CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
          E2E_ACR_REGISTRY: ${{ env.CLUSTER_NAME }}.azurecr.io
          E2E_ACR_REGISTRY_SECRET: ${{ env.CLUSTER_NAME }}-acr-secret


      - name: Cleanup e2e resources
        if: ${{ always() }}
        env:
          AZURE_RESOURCE_GROUP: ${{ env.CLUSTER_NAME }}
        uses: azure/CLI@v2.1.0
        with:
          inlineScript: |
            set +e
            az group delete --name "${AZURE_RESOURCE_GROUP}" --yes --no-wait || true